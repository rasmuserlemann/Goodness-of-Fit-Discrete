kolmotest = function(d, MLE){
  m = max(d)
  pm = 1-dgeom(0:(m-1), MLE)
  R = c()
  for (var1 in 0:m){
    N = 0
    for (var2 in 0:var1){
      N = N + length(d[d==var2])
      }
    R[var1+1]=abs(N-length(d)*(sum(dgeom(0:var1,MLE))))
  }
  return(max(R))
}

alg1 = function(n, t){
  N = 0
  V = 0
  I = t+n-1
  k = c()
  while (N<n-1){
    p = runif(1)
    if (p<(n-1-N)/(t+n-1-N-V)){
      k = c(I,k)
      N = N+1
      I = I-1
    }
    else{
      V = V+1
      I = I-1
    }
  }
  return(k)
}

randombars = function(n,t){
  s1 = alg1(n, t)
  final = c(s1[1]-1)
  for (ind in 2:length(s1)){
    val = s1[ind]-ind-(s1[ind-1]-(ind-1))
    final = append(final, val)
  }
  final = append(final, t-(s1[length(s1)]-(n-1)))
  return (final)
}


vvv = 500
sig = 0.05
count2 = 0
for (ooo in 1:vvv){
#Alternative
n = 25
q = 0.7
beta = 0.8
d = rdweibull(n, q, beta, zero = TRUE)
t = sum(d)


mmm = 400

MLE = n/(sum(d)+n)

CO = kolmotest(d, MLE)

C = c()
for (pp in 1:mmm){
  s = randombars(n,t)
  C[pp] = kolmotest(s, MLE)
}

condpvalue = length(C[C > CO])/length(C)
if (condpvalue < sig){
  count2 = count2 + 1
}
}
print(100*count2/vvv)
